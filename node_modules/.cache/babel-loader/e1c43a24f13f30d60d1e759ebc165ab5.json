{"ast":null,"code":"import _slicedToArray from \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Slider.js\";\n\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport Content from \"./Content\";\nimport SlideButton from \"./SlideButton\";\nimport SliderWrapper from \"./SliderWrapper\";\nimport useSliding from \"./useSliding\";\nimport useSizeElement from \"./useSizeElement\";\nimport \"./Slider.scss\";\n\nfunction hover(props) {\n  this.state = {\n    hovered: false\n  };\n}\n\nvar Slider = function Slider(_ref) {\n  var children = _ref.children,\n      activeSlide = _ref.activeSlide,\n      movie = _ref.movie;\n\n  var _useState = useState(activeSlide),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSlide = _useState2[0],\n      setCurrentSlide = _useState2[1];\n\n  var _useSizeElement = useSizeElement(),\n      width = _useSizeElement.width,\n      elementRef = _useSizeElement.elementRef;\n\n  var _useSliding = useSliding(width, React.Children.count(children)),\n      handlePrev = _useSliding.handlePrev,\n      handleNext = _useSliding.handleNext,\n      slideProps = _useSliding.slideProps,\n      containerRef = _useSliding.containerRef,\n      hasNext = _useSliding.hasNext,\n      hasPrev = _useSliding.hasPrev;\n\n  var handleSelect = function handleSelect(movie) {\n    setCurrentSlide(movie);\n  };\n\n  var handleClose = function handleClose() {\n    setCurrentSlide(null);\n  };\n\n  var contextValue = {\n    onSelectSlide: handleSelect,\n    onCloseSlide: handleClose,\n    elementRef: elementRef,\n    currentSlide: currentSlide\n  };\n  /************* hereeeeeee */\n\n  /* const expansionSize = movie.transitionWidth; */\n\n  console.log(movie.transitionWidth);\n  return /*#__PURE__*/React.createElement(SliderContext.Provider, {\n    value: contextValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SliderWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(\"slider\", {\n      \"slider--open\": currentSlide != null\n    }),\n    onMouseOver: function onMouseOver() {\n      return _this.setState({\n        hovered: true\n      });\n    },\n    onMouseOut: function onMouseOut() {\n      return _this.setState({\n        hovered: false\n      });\n    },\n    style: {\n      transform: \"\".concat(_this.state.hovered ? \"scale(\" + expansionSize + \")\" : null)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: containerRef,\n    className: \"slider__container\"\n  }, slideProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), children)), hasPrev && /*#__PURE__*/React.createElement(SlideButton, {\n    onClick: handlePrev,\n    type: \"prev\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), hasNext && /*#__PURE__*/React.createElement(SlideButton, {\n    onClick: handleNext,\n    type: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), currentSlide && /*#__PURE__*/React.createElement(Content, {\n    movie: currentSlide,\n    onClose: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Slider.js"],"names":["React","useState","cx","SliderContext","Content","SlideButton","SliderWrapper","useSliding","useSizeElement","hover","props","state","hovered","Slider","children","activeSlide","movie","currentSlide","setCurrentSlide","width","elementRef","Children","count","handlePrev","handleNext","slideProps","containerRef","hasNext","hasPrev","handleSelect","handleClose","contextValue","onSelectSlide","onCloseSlide","console","log","transitionWidth","setState","transform","expansionSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport Content from \"./Content\";\nimport SlideButton from \"./SlideButton\";\nimport SliderWrapper from \"./SliderWrapper\";\nimport useSliding from \"./useSliding\";\nimport useSizeElement from \"./useSizeElement\";\nimport \"./Slider.scss\";\n\nfunction hover(props) {\n  this.state = { hovered: false };\n}\n\nconst Slider = ({ children, activeSlide, movie }) => {\n  const [currentSlide, setCurrentSlide] = useState(activeSlide);\n  const { width, elementRef } = useSizeElement();\n\n  const {\n    handlePrev,\n    handleNext,\n    slideProps,\n    containerRef,\n    hasNext,\n    hasPrev,\n  } = useSliding(width, React.Children.count(children));\n\n  const handleSelect = (movie) => {\n    setCurrentSlide(movie);\n  };\n\n  const handleClose = () => {\n    setCurrentSlide(null);\n  };\n\n  const contextValue = {\n    onSelectSlide: handleSelect,\n    onCloseSlide: handleClose,\n    elementRef,\n    currentSlide,\n  };\n\n  /************* hereeeeeee */\n  /* const expansionSize = movie.transitionWidth; */\n  console.log(movie.transitionWidth);\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <SliderWrapper>\n        <div\n          className={cx(\"slider\", { \"slider--open\": currentSlide != null })}\n          onMouseOver={() => this.setState({ hovered: true })}\n          onMouseOut={() => this.setState({ hovered: false })}\n          style={{\n            transform: `${\n              this.state.hovered ? \"scale(\" + expansionSize + \")\" : null\n            }`,\n          }}\n        >\n          <div ref={containerRef} className=\"slider__container\" {...slideProps}>\n            {children}\n          </div>\n        </div>\n        {hasPrev && <SlideButton onClick={handlePrev} type=\"prev\" />}\n        {hasNext && <SlideButton onClick={handleNext} type=\"next\" />}\n      </SliderWrapper>\n      {currentSlide && <Content movie={currentSlide} onClose={handleClose} />}\n    </SliderContext.Provider>\n  );\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}