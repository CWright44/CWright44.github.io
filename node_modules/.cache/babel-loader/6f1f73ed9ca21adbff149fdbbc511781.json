{"ast":null,"code":"import _slicedToArray from \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js\";\n\n/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\n\nfunction Hookimplement(growthrate) {\n  var _useState = useState(sethovering),\n      _useState2 = _slicedToArray(_useState, 2),\n      hovered = _useState2[0],\n      sethovering = _useState2[1];\n}\n\nvar Item = function Item(_ref) {\n  var movie = _ref.movie;\n  return /*#__PURE__*/React.createElement(SliderContext.Consumer, {\n    props: {\n      movie: movie\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, function (_ref2) {\n    var onSelectSlide = _ref2.onSelectSlide,\n        currentSlide = _ref2.currentSlide,\n        elementRef = _ref2.elementRef;\n    var isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth;\n    console.log(\"transitionSize \" + movie.transitionWidth);\n    console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\"\n        /* transform : \"scale(\" + transitionGrowth + \")\" */\n\n      },\n      ref: elementRef,\n      className: cx(\"item\", {\n        \"item--open\": isActive\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: movie.image,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ShowDetailsButton, {\n      onClick: function onClick() {\n        return onSelectSlide(movie);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), isActive && /*#__PURE__*/React.createElement(Mark, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }\n    }));\n  });\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js"],"names":["React","useState","cx","SliderContext","ShowDetailsButton","Mark","Hookimplement","growthrate","sethovering","hovered","Item","movie","onSelectSlide","currentSlide","elementRef","isActive","id","transitionSize","transitionEase","transitionGrowth","transitionWidth","console","log","transition","image"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,aAAP;;AAEA,SAASC,aAAT,CAAuBC,UAAvB,EAAmC;AAAA,kBACFN,QAAQ,CAACO,WAAD,CADN;AAAA;AAAA,MAC1BC,OAD0B;AAAA,MACjBD,WADiB;AAElC;;AAED,IAAME,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sBACX,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA;AAAF,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAAiD;AAAA,QAA9CC,aAA8C,SAA9CA,aAA8C;AAAA,QAA/BC,YAA+B,SAA/BA,YAA+B;AAAA,QAAjBC,UAAiB,SAAjBA,UAAiB;AAChD,QAAMC,QAAQ,GAAGF,YAAY,IAAIA,YAAY,CAACG,EAAb,KAAoBL,KAAK,CAACK,EAA3D;AAAA,QACEC,cAAc,GAAGN,KAAK,CAACM,cADzB;AAAA,QAEEC,cAAc,GAAGP,KAAK,CAACO,cAFzB;AAAA,QAGEC,gBAAgB,GAAGR,KAAK,CAACS,eAH3B;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBX,KAAK,CAACS,eAAtC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeL,cAAf,GAAgC,QAAhC,GAA2CC,cAAvD;AAEA,wBACE;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,UAAU,EACR,eACAN,cADA,GAEA,UAFA,GAGAC,cAHA,GAIA;AAEF;;AARK,OADT;AAWE,MAAA,GAAG,EAAEJ,UAXP;AAYE,MAAA,SAAS,EAAEZ,EAAE,CAAC,MAAD,EAAS;AACpB,sBAAca;AADM,OAAT,CAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAgBE;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACa,KAAhB;AAAuB,MAAA,GAAG,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eAiBE,oBAAC,iBAAD;AAAmB,MAAA,OAAO,EAAE;AAAA,eAAMZ,aAAa,CAACD,KAAD,CAAnB;AAAA,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAkBGI,QAAQ,iBAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBf,CADF;AAsBD,GAjCH,CADW;AAAA,CAAb;;AAsCA,eAAeL,IAAf","sourcesContent":["/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\n\nfunction Hookimplement(growthrate) {\n  const [hovered, sethovering] = useState(sethovering);\n}\n\nconst Item = ({ movie }) => (\n  <SliderContext.Consumer props={{ movie }}>\n    {({ onSelectSlide, currentSlide, elementRef }) => {\n      const isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth;\n\n      console.log(\"transitionSize \" + movie.transitionWidth);\n\n      console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n\n      return (\n        <div\n          style={{\n            transition:\n              \"transform \" +\n              transitionSize +\n              \"ms ease \" +\n              transitionEase +\n              \"ms\",\n\n            /* transform : \"scale(\" + transitionGrowth + \")\" */\n          }}\n          ref={elementRef}\n          className={cx(\"item\", {\n            \"item--open\": isActive,\n          })}\n        >\n          <img src={movie.image} alt=\"\" />\n          <ShowDetailsButton onClick={() => onSelectSlide(movie)} />\n          {isActive && <Mark />}\n        </div>\n      );\n    }}\n  </SliderContext.Consumer>\n);\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}