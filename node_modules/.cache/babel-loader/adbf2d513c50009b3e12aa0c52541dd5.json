{"ast":null,"code":"import _defineProperty from \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js\";\n\n/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\n\nvar Item = function Item(_ref) {\n  var movie = _ref.movie;\n  return /*#__PURE__*/React.createElement(SliderContext.Consumer, {\n    props: {\n      movie: movie\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, function (_ref2) {\n    var _React$createElement;\n\n    var onSelectSlide = _ref2.onSelectSlide,\n        currentSlide = _ref2.currentSlide,\n        elementRef = _ref2.elementRef;\n    var isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth;\n    console.log(\"transitionSize \" + movie.transitionWidth);\n    console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n    return /*#__PURE__*/React.createElement(\"div\", (_React$createElement = {\n      onMouseOut: function onMouseOut() {\n        return _this.setState(true);\n      },\n      onMouseOver: function onMouseOver() {\n        return _this.setState({\n          hovered: false\n        });\n      },\n      style: {\n        transform: \"\".concat(_this.state.hovered ? 'scale(1.5,1.5)' : null)\n      }\n    }, _defineProperty(_React$createElement, \"style\", {\n      transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\",\n      transform: \"scale(\" + transitionGrowth + \")\"\n    }), _defineProperty(_React$createElement, \"ref\", elementRef), _defineProperty(_React$createElement, \"className\", cx(\"item\", {\n      \"item--open\": isActive\n    })), _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }), _React$createElement), /*#__PURE__*/React.createElement(\"img\", {\n      src: movie.image,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ShowDetailsButton, {\n      onClick: function onClick() {\n        return onSelectSlide(movie);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), isActive && /*#__PURE__*/React.createElement(Mark, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }\n    }));\n  });\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js"],"names":["React","useState","cx","SliderContext","ShowDetailsButton","Mark","Item","movie","onSelectSlide","currentSlide","elementRef","isActive","id","transitionSize","transitionEase","transitionGrowth","transitionWidth","console","log","setState","hovered","transform","state","transition","image"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,aAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sBAEX,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA;AAAF,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,iBAAiD;AAAA;;AAAA,QAA9CC,aAA8C,SAA9CA,aAA8C;AAAA,QAA/BC,YAA+B,SAA/BA,YAA+B;AAAA,QAAjBC,UAAiB,SAAjBA,UAAiB;AAChD,QAAMC,QAAQ,GAAGF,YAAY,IAAIA,YAAY,CAACG,EAAb,KAAoBL,KAAK,CAACK,EAA3D;AAAA,QACEC,cAAc,GAAGN,KAAK,CAACM,cADzB;AAAA,QAEEC,cAAc,GAAGP,KAAK,CAACO,cAFzB;AAAA,QAGEC,gBAAgB,GAACR,KAAK,CAACS,eAHzB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBX,KAAK,CAACS,eAAtC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeL,cAAf,GAAgC,QAAhC,GAA2CC,cAAvD;AAEA,wBACE;AAEA,MAAA,UAAU,EAAE;AAAA,eAAM,KAAI,CAACK,QAAL,CAAc,IAAd,CAAN;AAAA,OAFZ;AAGA,MAAA,WAAW,EAAE;AAAA,eAAM,KAAI,CAACA,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAd,CAAN;AAAA,OAHb;AAIA,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,YAAK,KAAI,CAACC,KAAL,CAAWF,OAAX,GAAqB,gBAArB,GAAwC,IAA7C;AAAV;AAJP,sDAOS;AACLG,MAAAA,UAAU,EACR,eACAV,cADA,GAEA,UAFA,GAGAC,cAHA,GAIA,IANG;AAYHO,MAAAA,SAAS,EAAG,WAAWN,gBAAX,GAA8B;AAZvC,KAPT,gDAqBOL,UArBP,sDAsBaR,EAAE,CAAC,MAAD,EAAS;AACpB,oBAAcS;AADM,KAAT,CAtBf;AAAA;AAAA;AAAA;AAAA,4CA0BE;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACiB,KAAhB;AAAuB,MAAA,GAAG,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,eA2BE,oBAAC,iBAAD;AAAmB,MAAA,OAAO,EAAE;AAAA,eAAMhB,aAAa,CAACD,KAAD,CAAnB;AAAA,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EA4BGI,QAAQ,iBAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5Bf,CADF;AAgCD,GA9CH,CAFW;AAAA,CAAb;;AAoDA,eAAeL,IAAf","sourcesContent":["/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\n\nconst Item = ({ movie }) => (\n  \n  <SliderContext.Consumer props={{ movie }}>\n    \n    {({ onSelectSlide, currentSlide, elementRef }) => {\n      const isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth=movie.transitionWidth;\n\n        \n\n      console.log(\"transitionSize \" + movie.transitionWidth);\n\n      console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n\n      return (\n        <div\n\n        onMouseOut={() => this.setState(true)}\n        onMouseOver={() => this.setState({hovered: false})}\n        style={{transform: `${this.state.hovered ? 'scale(1.5,1.5)' : null}`}}\n\n\n          style={{\n            transition:\n              \"transform \" +\n              transitionSize +\n              \"ms ease \" +\n              transitionEase +\n              \"ms\", \n              \n\n              \n              \n              \n              transform : \"scale(\" + transitionGrowth + \")\"\n          }}\n          ref={elementRef}\n          className={cx(\"item\", {\n            \"item--open\": isActive,\n          })}\n        >\n          <img src={movie.image} alt=\"\" />\n          <ShowDetailsButton onClick={() => onSelectSlide(movie)} />\n          {isActive && <Mark />}\n        </div>\n      );\n    }}\n  </SliderContext.Consumer>\n);\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}