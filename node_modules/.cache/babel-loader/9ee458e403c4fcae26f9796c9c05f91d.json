{"ast":null,"code":"import _slicedToArray from \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js\";\n\n/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\"; // import { render } from \"node-sass\";\n\nvar transformation;\n/*ISSUEESSS */\n// export function wrapperfunction(movie) {\n//   const [hover, setHover] = useState(currhoverstate);\n\nexport function Item(_ref) {\n  var _this = this;\n\n  var movie = _ref.movie;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hover = _useState2[0],\n      setHover = _useState2[1];\n\n  hover = (_readOnlyError(\"hover\"), false);\n  setHover = (_readOnlyError(\"setHover\"), function (bool) {\n    hover = (_readOnlyError(\"hover\"), bool);\n    console.log(hover);\n  });\n  return /*#__PURE__*/React.createElement(SliderContext.Consumer, {\n    props: {\n      movie: movie\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var onSelectSlide = _ref2.onSelectSlide,\n        currentSlide = _ref2.currentSlide,\n        elementRef = _ref2.elementRef;\n    var isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth; // console.log(\"transitionSize \" + movie.transitionWidth);\n    // console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n    // function setHoverProp(currhoverstate) {\n    //   // const [hover, setHover] = useState(currhoverstate);\n    //   /* CANT RENDER THE STATE UNLESS OUTSIDE DIV */\n    //   setHover(currhoverstate);\n    // }\n\n    /* Would I do it like a getter setter ? */\n    // function getHoverProp() {\n    //   return hover;\n    // }\n\n    function setStyle(hovered) {\n      console.log(\"this is the assignmet of hover\" + hover);\n      hovered ? transformation = \"scale(\" + transitionGrowth + \")\" : transformation = \"scale(1.0)\"; // console.log(\n      //   \"this is the assignment of transformation\" + transformation\n      // );\n\n      console.log({\n        transform: transformation,\n        transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\"\n      });\n      return {\n        transform: transformation,\n        transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\"\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseOut: function onMouseOut() {\n        return setHoverProp(false);\n      },\n      onMouseOver: function onMouseOver() {\n        return setHoverProp(true);\n      },\n      style: setStyle(getHoverProp()),\n      ref: elementRef,\n      className: cx(\"item\", {\n        \"item--open\": isActive\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: movie.image,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ShowDetailsButton, {\n      onClick: function onClick() {\n        return onSelectSlide(movie);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), isActive && /*#__PURE__*/React.createElement(Mark, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }\n    }));\n  });\n}\n/* Return Item at end from wrapper */\n//   return <div>{Item}</div>;\n// }\n\n/* export default Item; */","map":{"version":3,"sources":["/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js"],"names":["React","useState","cx","SliderContext","ShowDetailsButton","Mark","transformation","Item","movie","hover","setHover","bool","console","log","onSelectSlide","currentSlide","elementRef","isActive","id","transitionSize","transitionEase","transitionGrowth","transitionWidth","setStyle","hovered","transform","transition","setHoverProp","getHoverProp","image"],"mappings":"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","sourcesContent":["/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\n// import { render } from \"node-sass\";\n\nvar transformation;\n\n/*ISSUEESSS */\n\n// export function wrapperfunction(movie) {\n//   const [hover, setHover] = useState(currhoverstate);\n\nexport function Item({ movie }) {\n\n  const [hover, setHover] = useState(false);\n  hover = false;\n  setHover = (bool) => {\n    hover = bool;\n    console.log(hover);\n  }\n\n  return (\n    <SliderContext.Consumer props={{ movie }}>\n      {({ onSelectSlide, currentSlide, elementRef }) => {\n        const isActive = currentSlide && currentSlide.id === movie.id,\n          transitionSize = movie.transitionSize,\n          transitionEase = movie.transitionEase,\n          transitionGrowth = movie.transitionWidth;\n        // console.log(\"transitionSize \" + movie.transitionWidth);\n        // console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n\n        // function setHoverProp(currhoverstate) {\n        //   // const [hover, setHover] = useState(currhoverstate);\n\n        //   /* CANT RENDER THE STATE UNLESS OUTSIDE DIV */\n        //   setHover(currhoverstate);\n        // }\n\n        /* Would I do it like a getter setter ? */\n        // function getHoverProp() {\n        //   return hover;\n        // }\n\n        \n\n        function setStyle(hovered) {\n          console.log(\"this is the assignmet of hover\" + hover);\n          hovered\n            ? (transformation = \"scale(\" + transitionGrowth + \")\")\n            : (transformation = \"scale(1.0)\");\n          // console.log(\n          //   \"this is the assignment of transformation\" + transformation\n          // );\n\n          console.log({\n            transform: transformation,\n            transition:\n              \"transform \" +\n              transitionSize +\n              \"ms ease \" +\n              transitionEase +\n              \"ms\",\n          });\n\n          return {\n            transform: transformation,\n            transition:\n              \"transform \" +\n              transitionSize +\n              \"ms ease \" +\n              transitionEase +\n              \"ms\",\n          };\n        }\n\n        return (\n          <div\n            onMouseOut={() => setHoverProp(false)}\n            onMouseOver={() => setHoverProp(true)}\n            style={setStyle(getHoverProp())}\n            ref={elementRef}\n            className={cx(\"item\", {\n              \"item--open\": isActive,\n            })}\n          >\n            <img src={movie.image} alt=\"\" />\n            <ShowDetailsButton onClick={() => onSelectSlide(movie)} />\n            {isActive && <Mark />}\n          </div>\n        );\n      }}\n    </SliderContext.Consumer>\n  );\n}\n\n/* Return Item at end from wrapper */\n\n//   return <div>{Item}</div>;\n// }\n\n/* export default Item; */\n"]},"metadata":{},"sourceType":"module"}