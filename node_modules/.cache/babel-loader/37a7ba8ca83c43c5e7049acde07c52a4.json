{"ast":null,"code":"import _slicedToArray from \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js\";\n\n/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\nimport { render } from \"node-sass\";\n\nfunction Hookimplement(currstate) {\n  var _useState = useState(currstate),\n      _useState2 = _slicedToArray(_useState, 2),\n      hovered = _useState2[0],\n      sethovering = _useState2[1];\n}\n\nfunction setStyle(hovered) {\n  hovered ? transform = \"scale(\" + transitionGrowth + \")\" : \"scale(1.0)\";\n  return {\n    transform: transform,\n    transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\"\n  };\n}\n\nvar Item = function Item(_ref) {\n  var movie = _ref.movie;\n  return /*#__PURE__*/React.createElement(SliderContext.Consumer, {\n    props: {\n      movie: movie\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, function (_ref2) {\n    var onSelectSlide = _ref2.onSelectSlide,\n        currentSlide = _ref2.currentSlide,\n        elementRef = _ref2.elementRef;\n    var isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth;\n    console.log(\"transitionSize \" + movie.transitionWidth);\n    console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseOut: function onMouseOut() {\n        return Hookimplement(false);\n      },\n      onMouseOver: function onMouseOver() {\n        return Hookimplement(true);\n      } // {hovered ? (\n      //  style={{transform:\"scale(\" + transitionGrowth + \")\"}}\n      //     transform: \"scale(\" + transitionGrowth + \")\"\n      // ): (\n      //   style={{transform:\"scale(1.0)\"}}\n      //   );\n      // }\n      // style={{\n      //   transition:\n      //     \"transform \" +\n      //     transitionSize +\n      //     \"ms ease \" +\n      //     transitionEase +\n      //     \"ms\"}}\n      ,\n      style: setStyle(hovered)\n      /* transform : \"scale(\" + transitionGrowth + \")\" */\n      ,\n      ref: elementRef,\n      className: cx(\"item\", {\n        \"item--open\": isActive\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: movie.image,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ShowDetailsButton, {\n      onClick: function onClick() {\n        return onSelectSlide(movie);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), isActive && /*#__PURE__*/React.createElement(Mark, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 24\n      }\n    }));\n  });\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js"],"names":["React","useState","cx","SliderContext","ShowDetailsButton","Mark","render","Hookimplement","currstate","hovered","sethovering","setStyle","transform","transitionGrowth","transition","transitionSize","transitionEase","Item","movie","onSelectSlide","currentSlide","elementRef","isActive","id","transitionWidth","console","log","image"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAAA,kBACDP,QAAQ,CAACO,SAAD,CADP;AAAA;AAAA,MACzBC,OADyB;AAAA,MAChBC,WADgB;AAEjC;;AAED,SAASC,QAAT,CAAkBF,OAAlB,EAA0B;AACxBA,EAAAA,OAAO,GAAGG,SAAS,GAAG,WAAWC,gBAAX,GAA8B,GAA7C,GAAmD,YAA1D;AACA,SAAO;AACHD,IAAAA,SAAS,EAAEA,SADR;AAEHE,IAAAA,UAAU,EACR,eACAC,cADA,GAEA,UAFA,GAGAC,cAHA,GAIA;AAPC,GAAP;AAQC;;AAGH,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sBACX,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA;AAAF,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAAiD;AAAA,QAA9CC,aAA8C,SAA9CA,aAA8C;AAAA,QAA/BC,YAA+B,SAA/BA,YAA+B;AAAA,QAAjBC,UAAiB,SAAjBA,UAAiB;AAChD,QAAMC,QAAQ,GAAGF,YAAY,IAAIA,YAAY,CAACG,EAAb,KAAoBL,KAAK,CAACK,EAA3D;AAAA,QACER,cAAc,GAAGG,KAAK,CAACH,cADzB;AAAA,QAEEC,cAAc,GAAGE,KAAK,CAACF,cAFzB;AAAA,QAGEH,gBAAgB,GAAGK,KAAK,CAACM,eAH3B;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBR,KAAK,CAACM,eAAtC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeX,cAAf,GAAgC,QAAhC,GAA2CC,cAAvD;AAEA,wBACE;AAEA,MAAA,UAAU,EAAE;AAAA,eAAMT,aAAa,CAAC,KAAD,CAAnB;AAAA,OAFZ;AAGA,MAAA,WAAW,EAAE;AAAA,eAAMA,aAAa,CAAC,IAAD,CAAnB;AAAA,OAHb,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA,MAAA,KAAK,EAAII,QAAQ,CAACF,OAAD;AAEf;AAtBF;AAwBE,MAAA,GAAG,EAAEY,UAxBP;AAyBE,MAAA,SAAS,EAAEnB,EAAE,CAAC,MAAD,EAAS;AACpB,sBAAcoB;AADM,OAAT,CAzBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA6BE;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACS,KAAhB;AAAuB,MAAA,GAAG,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,eA8BE,oBAAC,iBAAD;AAAmB,MAAA,OAAO,EAAE;AAAA,eAAMR,aAAa,CAACD,KAAD,CAAnB;AAAA,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EA+BGI,QAAQ,iBAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/Bf,CADF;AAmCD,GA9CH,CADW;AAAA,CAAb;;AAmDA,eAAeL,IAAf","sourcesContent":["/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\nimport { render } from \"node-sass\";\n\nfunction Hookimplement(currstate) {\n  const [hovered, sethovering] = useState(currstate);\n}\n\nfunction setStyle(hovered){\n  hovered ? transform = \"scale(\" + transitionGrowth + \")\" : \"scale(1.0)\";\n  return {\n      transform: transform,\n      transition:\n        \"transform \" +\n        transitionSize +\n        \"ms ease \" +\n        transitionEase +\n        \"ms\"}\n  }\n\n\nconst Item = ({ movie }) => (\n  <SliderContext.Consumer props={{ movie }}>\n    {({ onSelectSlide, currentSlide, elementRef }) => {\n      const isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth;\n\n      console.log(\"transitionSize \" + movie.transitionWidth);\n\n      console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n      \n      return (\n        <div\n\n        onMouseOut={() => Hookimplement(false)}\n        onMouseOver={() => Hookimplement(true)}\n        // {hovered ? (\n        //  style={{transform:\"scale(\" + transitionGrowth + \")\"}}\n        //     transform: \"scale(\" + transitionGrowth + \")\"\n        // ): (\n        //   style={{transform:\"scale(1.0)\"}}\n        //   );\n        // }\n\n        // style={{\n        //   transition:\n        //     \"transform \" +\n        //     transitionSize +\n        //     \"ms ease \" +\n        //     transitionEase +\n        //     \"ms\"}}\n\n        style = {setStyle(hovered)}\n\n          /* transform : \"scale(\" + transitionGrowth + \")\" */\n\n          ref={elementRef}\n          className={cx(\"item\", {\n            \"item--open\": isActive,\n          })}\n        >\n          <img src={movie.image} alt=\"\" />\n          <ShowDetailsButton onClick={() => onSelectSlide(movie)} />\n          {isActive && <Mark />}\n        </div>\n      );\n    }}\n  </SliderContext.Consumer>\n);\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}