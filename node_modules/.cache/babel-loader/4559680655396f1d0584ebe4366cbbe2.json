{"ast":null,"code":"import _slicedToArray from \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js\";\n\n/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\"; // import { render } from \"node-sass\";\n\nvar transformation;\n/*ISSUEESSS */\n\nexport function wrapperfunction(movie) {\n  var _this = this;\n\n  var _useState = useState(currhoverstate),\n      _useState2 = _slicedToArray(_useState, 2),\n      hover = _useState2[0],\n      setHover = _useState2[1];\n\n  var Item = function Item(_ref) {\n    var movie = _ref.movie;\n    return /*#__PURE__*/React.createElement(SliderContext.Consumer, {\n      props: {\n        movie: movie\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 3\n      }\n    }, function (_ref2) {\n      var onSelectSlide = _ref2.onSelectSlide,\n          currentSlide = _ref2.currentSlide,\n          elementRef = _ref2.elementRef;\n      var isActive = currentSlide && currentSlide.id === movie.id,\n          transitionSize = movie.transitionSize,\n          transitionEase = movie.transitionEase,\n          transitionGrowth = movie.transitionWidth; // console.log(\"transitionSize \" + movie.transitionWidth);\n      // console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n\n      function setHoverProp(currhoverstate) {\n        // const [hover, setHover] = useState(currhoverstate);\n        setHover(currhoverstate);\n      }\n      /* Would I do it like a getter setter ? */\n\n\n      function getHoverProp() {\n        return this.state.hover;\n      } // function setHoverProp(bool) {\n      //   hover = bool;\n      //   console.log(hover);\n      // }\n\n\n      function setStyle(hovered) {\n        console.log(\"this is the assignmet of hover\" + hovered);\n        hovered ? transformation = \"scale(\" + transitionGrowth + \")\" : transformation = \"scale(1.0)\"; // console.log(\n        //   \"this is the assignment of transformation\" + transformation\n        // );\n\n        console.log({\n          transform: transformation,\n          transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\"\n        });\n        return {\n          transform: transformation,\n          transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\"\n        };\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onMouseOut: function onMouseOut() {\n          return setHoverProp(false);\n        },\n        onMouseOver: function onMouseOver() {\n          return setHoverProp(true);\n        },\n        style: setStyle(getHoverProp()),\n        ref: elementRef,\n        className: cx(\"item\", {\n          \"item--open\": isActive\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: movie.image,\n        alt: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ShowDetailsButton, {\n        onClick: function onClick() {\n          return onSelectSlide(movie);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), isActive && /*#__PURE__*/React.createElement(Mark, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }\n      }));\n    });\n  };\n  /* Return Item at end from wrapper */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, Item);\n}\n/* export default Item; */","map":{"version":3,"sources":["/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js"],"names":["React","useState","cx","SliderContext","ShowDetailsButton","Mark","transformation","wrapperfunction","movie","currhoverstate","hover","setHover","Item","onSelectSlide","currentSlide","elementRef","isActive","id","transitionSize","transitionEase","transitionGrowth","transitionWidth","setHoverProp","getHoverProp","state","setStyle","hovered","console","log","transform","transition","image"],"mappings":"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","sourcesContent":["/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\n// import { render } from \"node-sass\";\n\nvar transformation;\n\n/*ISSUEESSS */ \n\nexport function wrapperfunction(movie){\n\n  const [hover, setHover] = useState(currhoverstate);\n\nconst Item = ({ movie }) => (\n\n  <SliderContext.Consumer props={{ movie }}>\n    {({ onSelectSlide, currentSlide, elementRef }) => {\n      const isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth;\n      // console.log(\"transitionSize \" + movie.transitionWidth);\n      // console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n\n      \n\n      function setHoverProp(currhoverstate) {\n        // const [hover, setHover] = useState(currhoverstate);\n\n        \n        setHover(currhoverstate);\n      }\n\n      /* Would I do it like a getter setter ? */\n      function getHoverProp() {\n        return this.state.hover;\n      }\n\n      // function setHoverProp(bool) {\n      //   hover = bool;\n      //   console.log(hover);\n      // }\n\n      function setStyle(hovered) {\n        console.log(\"this is the assignmet of hover\" + hovered);\n        hovered\n          ? (transformation = \"scale(\" + transitionGrowth + \")\")\n          : (transformation = \"scale(1.0)\");\n        // console.log(\n        //   \"this is the assignment of transformation\" + transformation\n        // );\n\n        console.log({\n          transform: transformation,\n          transition:\n            \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\",\n        });\n\n        return {\n          transform: transformation,\n          transition:\n            \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\",\n        };\n      }\n\n      return (\n        <div\n          onMouseOut={() => setHoverProp(false)}\n          onMouseOver={() => setHoverProp(true)}\n          style={setStyle(getHoverProp())}\n          ref={elementRef}\n          className={cx(\"item\", {\n            \"item--open\": isActive,\n          })}\n        >\n          <img src={movie.image} alt=\"\" />\n          <ShowDetailsButton onClick={() => onSelectSlide(movie)} />\n          {isActive && <Mark />}\n        </div>\n      );\n    }}\n  </SliderContext.Consumer>\n);\n\n/* Return Item at end from wrapper */ \nreturn(\n  <div>\n    {Item}\n  </div>\n)\n\n  }\n\n/* export default Item; */ \n"]},"metadata":{},"sourceType":"module"}