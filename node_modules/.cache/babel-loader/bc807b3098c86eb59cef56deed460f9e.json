{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js\";\n\n/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\nimport { render } from \"node-sass\";\nvar transformation;\n\nvar Item = function Item(_ref) {\n  var movie = _ref.movie;\n  return /*#__PURE__*/React.createElement(SliderContext.Consumer, {\n    props: {\n      movie: movie\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, function (_ref2) {\n    var onSelectSlide = _ref2.onSelectSlide,\n        currentSlide = _ref2.currentSlide,\n        elementRef = _ref2.elementRef;\n    var isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth;\n    console.log(\"transitionSize \" + movie.transitionWidth);\n    console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n\n    function setStyle(hovered) {\n      console.log(\"this is the assignmet of hover\" + hovered);\n      hovered ? transformation = \"scale(\" + transitionGrowth + \")\" : transformation = \"scale(1.0)\"; // console.log(\n      //   \"this is the assignment of transformation\" + transformation\n      // );\n\n      console.log({\n        transform: transformation,\n        transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\"\n      });\n      return {\n        transform: transformation,\n        transition: \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\"\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseOut: function onMouseOut() {\n        return setStyle(false);\n      },\n      onMouseOver: function onMouseOver() {\n        return setStyle(true);\n      } // {hovered ? (\n      //  style={{transform:\"scale(\" + transitionGrowth + \")\"}}\n      //     transform: \"scale(\" + transitionGrowth + \")\"\n      // ): (\n      //   style={{transform:\"scale(1.0)\"}}\n      //   );\n      // }\n      // style={{\n      //   transition:\n      //     \"transform \" +\n      //     transitionSize +\n      //     \"ms ease \" +\n      //     transitionEase +\n      //     \"ms\"}}\n\n      /* style = {setStyle(hovered)} */\n\n      /* transform : \"scale(\" + transitionGrowth + \")\" */\n      ,\n      ref: elementRef,\n      className: cx(\"item\", {\n        \"item--open\": isActive\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: movie.image,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ShowDetailsButton, {\n      onClick: function onClick() {\n        return onSelectSlide(movie);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), isActive && /*#__PURE__*/React.createElement(Mark, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }\n    }));\n  });\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/chelseawright/Coding_Projects/react_development/React/netflix-slider/src/components/NetflixSlider/Item.js"],"names":["React","useState","cx","SliderContext","ShowDetailsButton","Mark","render","transformation","Item","movie","onSelectSlide","currentSlide","elementRef","isActive","id","transitionSize","transitionEase","transitionGrowth","transitionWidth","console","log","setStyle","hovered","transform","transition","image"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,IAAIC,cAAJ;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sBACX,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA;AAAF,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAAiD;AAAA,QAA9CC,aAA8C,SAA9CA,aAA8C;AAAA,QAA/BC,YAA+B,SAA/BA,YAA+B;AAAA,QAAjBC,UAAiB,SAAjBA,UAAiB;AAChD,QAAMC,QAAQ,GAAGF,YAAY,IAAIA,YAAY,CAACG,EAAb,KAAoBL,KAAK,CAACK,EAA3D;AAAA,QACEC,cAAc,GAAGN,KAAK,CAACM,cADzB;AAAA,QAEEC,cAAc,GAAGP,KAAK,CAACO,cAFzB;AAAA,QAGEC,gBAAgB,GAAGR,KAAK,CAACS,eAH3B;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBX,KAAK,CAACS,eAAtC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeL,cAAf,GAAgC,QAAhC,GAA2CC,cAAvD;;AAEA,aAASK,QAAT,CAAkBC,OAAlB,EAA2B;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCE,OAA/C;AACAA,MAAAA,OAAO,GACLf,cAAc,GAAG,WAAWU,gBAAX,GAA8B,GAD1C,GAEHV,cAAc,GAAG,YAFrB,CAFyB,CAKzB;AACA;AACA;;AAEAY,MAAAA,OAAO,CAACC,GAAR,CACE;AACEG,QAAAA,SAAS,EAAEhB,cADb;AAEEiB,QAAAA,UAAU,EACR,eAAeT,cAAf,GAAgC,UAAhC,GAA6CC,cAA7C,GAA8D;AAHlE,OADF;AAQA,aAAO;AACLO,QAAAA,SAAS,EAAEhB,cADN;AAELiB,QAAAA,UAAU,EACR,eAAeT,cAAf,GAAgC,UAAhC,GAA6CC,cAA7C,GAA8D;AAH3D,OAAP;AAKD;;AAED,wBACE;AACE,MAAA,UAAU,EAAE;AAAA,eAAMK,QAAQ,CAAC,KAAD,CAAd;AAAA,OADd;AAEE,MAAA,WAAW,EAAE;AAAA,eAAMA,QAAQ,CAAC,IAAD,CAAd;AAAA,OAFf,CAGE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AArBF;AAuBE,MAAA,GAAG,EAAET,UAvBP;AAwBE,MAAA,SAAS,EAAEV,EAAE,CAAC,MAAD,EAAS;AACpB,sBAAcW;AADM,OAAT,CAxBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA4BE;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACgB,KAAhB;AAAuB,MAAA,GAAG,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,eA6BE,oBAAC,iBAAD;AAAmB,MAAA,OAAO,EAAE;AAAA,eAAMf,aAAa,CAACD,KAAD,CAAnB;AAAA,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,EA8BGI,QAAQ,iBAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9Bf,CADF;AAkCD,GArEH,CADW;AAAA,CAAb;;AA0EA,eAAeL,IAAf","sourcesContent":["/* import React from \"react\"; */\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport SliderContext from \"./context\";\nimport ShowDetailsButton from \"./ShowDetailsButton\";\nimport Mark from \"./Mark\";\nimport \"./Item.scss\";\nimport { render } from \"node-sass\";\n\nvar transformation;\n\nconst Item = ({ movie }) => (\n  <SliderContext.Consumer props={{ movie }}>\n    {({ onSelectSlide, currentSlide, elementRef }) => {\n      const isActive = currentSlide && currentSlide.id === movie.id,\n        transitionSize = movie.transitionSize,\n        transitionEase = movie.transitionEase,\n        transitionGrowth = movie.transitionWidth;\n\n      console.log(\"transitionSize \" + movie.transitionWidth);\n\n      console.log(\"transform \" + transitionSize + \" ease \" + transitionEase);\n\n      function setStyle(hovered) {\n        console.log(\"this is the assignmet of hover\" + hovered);\n        hovered ?\n          transformation = \"scale(\" + transitionGrowth + \")\"\n          : transformation = \"scale(1.0)\";\n        // console.log(\n        //   \"this is the assignment of transformation\" + transformation\n        // );\n\n        console.log(\n          {\n            transform: transformation,\n            transition:\n              \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\",\n          }\n        )\n\n        return {\n          transform: transformation,\n          transition:\n            \"transform \" + transitionSize + \"ms ease \" + transitionEase + \"ms\",\n        };\n      }\n\n      return (\n        <div\n          onMouseOut={() => setStyle(false)}\n          onMouseOver={() => setStyle(true)}\n          // {hovered ? (\n          //  style={{transform:\"scale(\" + transitionGrowth + \")\"}}\n          //     transform: \"scale(\" + transitionGrowth + \")\"\n          // ): (\n          //   style={{transform:\"scale(1.0)\"}}\n          //   );\n          // }\n\n          // style={{\n          //   transition:\n          //     \"transform \" +\n          //     transitionSize +\n          //     \"ms ease \" +\n          //     transitionEase +\n          //     \"ms\"}}\n\n          /* style = {setStyle(hovered)} */\n\n          /* transform : \"scale(\" + transitionGrowth + \")\" */\n\n          ref={elementRef}\n          className={cx(\"item\", {\n            \"item--open\": isActive,\n          })}\n        >\n          <img src={movie.image} alt=\"\" />\n          <ShowDetailsButton onClick={() => onSelectSlide(movie)} />\n          {isActive && <Mark />}\n        </div>\n      );\n    }}\n  </SliderContext.Consumer>\n);\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}